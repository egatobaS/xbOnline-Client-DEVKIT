#pragma once

extern int HV_PEEK_POKE_EXP_ID;

#define HvxCall unsigned long long _declspec(naked)

typedef enum _PEEK_POKE_TYPE {
	PEEK_BYTE,
	PEEK_WORD,
	PEEK_DWORD,
	PEEK_QWORD,
	PEEK_BYTES,
	POKE_BYTE,
	POKE_WORD,
	POKE_DWORD,
	POKE_QWORD,
	POKE_BYTES,
	PEEK_SPR
} PEEK_POKE_TYPE;

const int Payload_Size = 0x214;

const unsigned char BasePayload[0x214] =
{
	0x7D, 0x88, 0x02, 0xA6, 0xFB, 0xE1, 0xFF, 0xF0, 0xF9, 0x81, 0xFF, 0xF8,
	0x94, 0x21, 0xFF, 0x00, 0x7C, 0x9F, 0x23, 0x78, 0x2C, 0x1F, 0x00, 0x00,
	0x41, 0x82, 0x00, 0xC0, 0x2C, 0x1F, 0x00, 0x01, 0x41, 0x82, 0x00, 0xC4,
	0x2C, 0x1F, 0x00, 0x02, 0x41, 0x82, 0x00, 0xC8, 0x2C, 0x1F, 0x00, 0x03,
	0x41, 0x82, 0x00, 0xCC, 0x2C, 0x1F, 0x00, 0x0A, 0x41, 0x82, 0x00, 0x64,
	0x2C, 0x1F, 0x00, 0x05, 0x41, 0x82, 0x01, 0x68, 0x2C, 0x1F, 0x00, 0x06,
	0x41, 0x82, 0x01, 0x68, 0x2C, 0x1F, 0x00, 0x07, 0x41, 0x82, 0x01, 0x68,
	0x2C, 0x1F, 0x00, 0x08, 0x41, 0x82, 0x01, 0x68, 0x2C, 0x1F, 0x00, 0x0B,
	0x40, 0x80, 0x00, 0x00, 0x80, 0x60, 0x00, 0x4C, 0x7C, 0x62, 0x1A, 0x14,
	0x80, 0x63, 0x00, 0x08, 0x7C, 0x69, 0x03, 0xA6, 0x7C, 0xC3, 0x33, 0x78,
	0x38, 0x80, 0x00, 0x01, 0x4E, 0x80, 0x04, 0x21, 0x7C, 0x66, 0x1B, 0x78,
	0x7C, 0xE9, 0x03, 0xA6, 0x2C, 0x1F, 0x00, 0x04, 0x41, 0x82, 0x00, 0x7C,
	0x2C, 0x1F, 0x00, 0x09, 0x41, 0x82, 0x01, 0x34, 0x48, 0x00, 0x00, 0x00,
	0x48, 0x00, 0x00, 0x05, 0x7C, 0xA6, 0x2B, 0x78, 0x3C, 0x80, 0x7C, 0x60,
	0x50, 0xA6, 0x54, 0x6A, 0x60, 0x84, 0x02, 0xA6, 0x50, 0xC4, 0x32, 0xE8,
	0x7C, 0x68, 0x02, 0xA6, 0x38, 0x63, 0x00, 0x30, 0x90, 0x83, 0x00, 0x00,
	0x7C, 0x00, 0x18, 0x6C, 0x7C, 0x00, 0x1F, 0xAC, 0x7C, 0x00, 0x04, 0xAC,
	0x4C, 0x00, 0x01, 0x2C, 0x7C, 0x60, 0x12, 0xA6, 0x48, 0x00, 0x01, 0x2C,
	0x48, 0x00, 0x00, 0x51, 0x88, 0x65, 0x00, 0x00, 0x48, 0x00, 0x01, 0x20,
	0x48, 0x00, 0x00, 0x45, 0xA0, 0x65, 0x00, 0x00, 0x48, 0x00, 0x01, 0x14,
	0x48, 0x00, 0x00, 0x39, 0x80, 0x65, 0x00, 0x00, 0x48, 0x00, 0x01, 0x08,
	0x48, 0x00, 0x00, 0x2D, 0xE8, 0x65, 0x00, 0x00, 0x48, 0x00, 0x00, 0xFC,
	0x48, 0x00, 0x00, 0x21, 0x8B, 0xE5, 0x00, 0x00, 0x9B, 0xE6, 0x00, 0x00,
	0x38, 0xA5, 0x00, 0x01, 0x38, 0xC6, 0x00, 0x01, 0x42, 0x00, 0xFF, 0xF0,
	0x38, 0x60, 0x00, 0x00, 0x48, 0x00, 0x00, 0xDC, 0x3C, 0x60, 0x00, 0x01,
	0x38, 0x63, 0xBB, 0x00, 0x80, 0x83, 0x00, 0x00, 0x2B, 0x04, 0x00, 0x00,
	0x41, 0x9A, 0x00, 0x6C, 0x2B, 0x05, 0x00, 0x30, 0x41, 0x99, 0x00, 0x18,
	0x2B, 0x05, 0x00, 0x20, 0x41, 0x98, 0x00, 0x5C, 0x7C, 0xA5, 0x1A, 0x14,
	0x38, 0xA5, 0xFF, 0xE0, 0x4E, 0x80, 0x00, 0x20, 0x3C, 0x80, 0x80, 0x00,
	0x60, 0x84, 0x02, 0x00, 0x78, 0x84, 0x07, 0xC6, 0x64, 0x84, 0x00, 0x02,
	0x60, 0x84, 0x06, 0x00, 0x7F, 0x25, 0x20, 0x40, 0x41, 0x98, 0x00, 0x34,
	0x38, 0x84, 0x04, 0x00, 0x7F, 0x25, 0x20, 0x40, 0x40, 0x98, 0x00, 0x10,
	0x7C, 0x65, 0x1B, 0x78, 0x38, 0xE0, 0x00, 0x08, 0x48, 0x00, 0x00, 0x1C,
	0x38, 0x84, 0x04, 0x00, 0x7F, 0x25, 0x20, 0x40, 0x40, 0x98, 0x00, 0x10,
	0x7C, 0x65, 0x1B, 0x78, 0x38, 0xA5, 0x00, 0x08, 0x38, 0xE0, 0x00, 0x08,
	0x4E, 0x80, 0x00, 0x20, 0x98, 0xC5, 0x00, 0x00, 0x48, 0x00, 0x00, 0x40,
	0xB0, 0xC5, 0x00, 0x00, 0x48, 0x00, 0x00, 0x38, 0x90, 0xC5, 0x00, 0x00,
	0x48, 0x00, 0x00, 0x30, 0xF8, 0xC5, 0x00, 0x00, 0x48, 0x00, 0x00, 0x28,
	0x8B, 0xE6, 0x00, 0x00, 0x9B, 0xE5, 0x00, 0x00, 0x7C, 0x00, 0x28, 0x6C,
	0x7C, 0x00, 0x2F, 0xAC, 0x7C, 0x00, 0x04, 0xAC, 0x4C, 0x00, 0x01, 0x2C,
	0x38, 0xA5, 0x00, 0x01, 0x38, 0xC6, 0x00, 0x01, 0x42, 0x00, 0xFF, 0xE0,
	0x38, 0x60, 0x00, 0x00, 0x7C, 0x00, 0x28, 0x6C, 0x7C, 0x00, 0x2F, 0xAC,
	0x7C, 0x00, 0x04, 0xAC, 0x4C, 0x00, 0x01, 0x2C, 0x38, 0x21, 0x01, 0x00,
	0xEB, 0xE1, 0xFF, 0xF0, 0xE9, 0x81, 0xFF, 0xF8, 0x7D, 0x88, 0x03, 0xA6,
	0x4E, 0x80, 0x00, 0x20
};

HRESULT InitializeHvPeekPoke();

unsigned char HvPeekBYTE(unsigned long long Address);
unsigned short HvPeekWORD(unsigned long long Address);
unsigned int HvPeekDWORD(unsigned long long Address);
unsigned long long HvPeekQWORD(unsigned long long Address);

HRESULT HvPeekBytes(unsigned long long Address, void* Buffer, unsigned int Size);
HRESULT HvPokeBYTE(unsigned long long Address, unsigned char Value);
HRESULT HvPokeWORD(unsigned long long Address, unsigned short Value);
HRESULT HvPokeDWORD(unsigned long long Address, unsigned int Value);
HRESULT HvPokeQWORD(unsigned long long Address, unsigned long long Value);
HRESULT HvPokeBytes(unsigned long long Address, const void* Buffer, unsigned int Size);

unsigned int HVGetVersionsPeekDWORD(unsigned long long Address);
unsigned long long HVGetVersionsPeekQWORD(unsigned long long Address);
void HVGetVersionsPeekBytes(unsigned long long Address, unsigned int length, unsigned char* OutData);
void HVGetVersionsPokeBytes(unsigned long long Address, unsigned char *Data, unsigned int length);
void HVGetVersionsPokeDWORD(unsigned long long Address, int Data);

__int64 HvxGetVersion(unsigned int key, __int64 type, __int64 SourceAddress, __int64 DestAddress, __int64 lenInBytes);

